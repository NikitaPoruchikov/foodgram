name: Foodgram Workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'

jobs:

  tests:
    name: check pep8 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          cd backend
          pip install -r requirements.txt
      - name: Test with flake8
        run: |
          cd backend
          python -m flake8 .

  build_and_push_backend_to_docker_hub:
    name: Push backend Docker Hub
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

  build_and_push_frontend_to_docker_hub:
    name: Push frontend Docker Hub
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest

  deploy:
    name: Deploying on remote server
    runs-on: ubuntu-latest
    needs:
      - build_and_push_backend_to_docker_hub
      - build_and_push_frontend_to_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/${{ secrets.USER }}/foodgram
            sudo rm -f .env
            sudo touch .env
            sudo chmod 600 .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} | sudo tee -a .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} | sudo tee -a .env
            echo DB_NAME=${{ secrets.DB_NAME }} | sudo tee -a .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} | sudo tee -a .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} | sudo tee -a .env
            echo DB_HOST=${{ secrets.DB_HOST }} | sudo tee -a .env
            echo DB_PORT=${{ secrets.DB_PORT }} | sudo tee -a .env

            sudo docker-compose down
            sudo docker-compose pull
            sudo docker-compose up -d --build

  send_message:
    name: Sending Telegram message
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "Все круто деплой прошел!"
